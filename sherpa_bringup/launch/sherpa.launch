<?xml version="1.0"?>
<!-- 
  Haupt-Launch-Datei für den realen SHERPA-Roboter
  Diese Datei startet alle notwendigen Komponenten für den realen Betrieb:
  - RPLiDAR A1M8 Hardware-Treiber
  - Motorsteuerung mit PCA9685 und TB6612FNG
  - Tastatur-Teleop-Steuerung
  - 2D-Mapping mit gmapping (optional)
-->
<launch>
  <!-- Allgemeine Parameter -->
  <arg name="use_rviz" default="false" doc="RViz auf dem Pi starten (nur mit Desktop-Umgebung)"/>
  
  <!-- RPLiDAR Parameter -->
  <arg name="rplidar_port" default="/dev/ttyUSB0" doc="Serieller Port des RPLiDAR"/>
  <arg name="rplidar_baudrate" default="115200" doc="Baudrate für A1/A2-Modelle"/>
  <arg name="rplidar_frame_id" default="rplidar_link" doc="TF-Frame für den RPLiDAR"/>
  
  <!-- Mapping-Parameter -->
  <arg name="enable_mapping" default="true" doc="2D-Mapping-Funktionalität aktivieren"/>
  <arg name="mapping_type" default="gmapping" doc="Mapping-Typ: 'gmapping', 'hector' oder 'cartographer'"/>
  <arg name="localization_only" default="false" doc="True für reine Lokalisierung in einer bestehenden Karte"/>
  
  <!-- 1. Starte RPLiDAR-Hardware-Treiber -->
  <include file="$(find rplidar_ros)/launch/sherpa_rplidar.launch">
    <arg name="serial_port" value="$(arg rplidar_port)"/>
    <arg name="serial_baudrate" value="$(arg rplidar_baudrate)"/>
    <arg name="frame_id" value="$(arg rplidar_frame_id)"/>
  </include>
  
  <!-- 2. Starte Motorsteuerung -->
  <include file="$(find sherpa_actuation)/launch/actuation.launch" />
  
  <!-- 3. Starte Tastatur-Teleop-Steuerung (deaktiviert, da Teleop auf Desktop laufen soll) -->
  <!-- <include file="$(find sherpa_teleop)/launch/sherpa_teleop.launch" /> -->
  
  <!-- 4. Starte das 2D-Mapping mit dem sherpa_mapping-Paket -->
  <group if="$(arg enable_mapping)">
    <include file="$(find sherpa_mapping)/launch/mapping.launch">
      <!-- Konfiguration für das Mapping -->
      <arg name="mode" value="$(eval 'localization' if localization_only else 'mapping')"/>
      <arg name="scan_topic" value="/scan"/>
      <arg name="use_rviz" value="$(arg use_rviz)"/> <!-- RViz nur starten, wenn explizit erwünscht -->
      <arg name="particles" value="60"/> <!-- Optimiert für Raupenfahrzeug -->
    </include>
  </group>
  
  <!-- Statischer TF-Publisher für den RPLiDAR (falls nicht in URDF definiert) -->
  <node pkg="tf" type="static_transform_publisher" name="rplidar_base_link" 
        args="0 0 0.2 0 0 0 base_link $(arg rplidar_frame_id) 100" />

  <!-- 6. Starte teleop_twist_keyboard für Tastatursteuerung, publiziert auf /cmd_vel -->
  <node pkg="teleop_twist_keyboard" type="teleop_twist_keyboard.py" name="teleop_twist_keyboard" output="screen" args="--ros-args -r /cmd_vel:=/cmd_vel"/>

  <!-- 7. Motorsteuerung abonniert jetzt /cmd_vel_filtered statt /cmd_vel (bitte in actuation.launch anpassen) -->
  
  <!-- 5. Starte MPU6050-IMU-Node -->
  <include file="$(find mpu6050_imu)/launch/mpu6050_imu.launch" />
</launch>